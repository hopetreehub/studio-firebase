# This file contains example environment variables.
# To use them, copy this file to a new file named .env and fill in the values.
# IMPORTANT: DO NOT commit your .env file to version control. It should be listed in your .gitignore file.

# Firebase Client SDK Configuration
# These values are used on the client-side (in the browser) to connect to your Firebase project.
# Find these in your Firebase project settings: Project Settings > General > Your apps > Firebase SDK snippet > Config.
NEXT_PUBLIC_FIREBASE_API_KEY="your-api-key"
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN="your-project-id.firebaseapp.com"
NEXT_PUBLIC_FIREBASE_PROJECT_ID="your-project-id"
NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET="your-project-id.appspot.com"
NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID="your-messaging-sender-id"
NEXT_PUBLIC_FIREBASE_APP_ID="your-app-id"

# The public URL of your deployed site.
# This is used for generating absolute URLs for sitemaps and social sharing.
# Example: https://your-awesome-app.com
NEXT_PUBLIC_SITE_URL="http://localhost:3000"

# Optional: Set this to 'true' to disable redirects after sign-in/sign-up.
# Useful for debugging or specific local development scenarios.
# NEXT_PUBLIC_DISABLE_AUTH_REDIRECT=false

# --- Server-Side Configuration ---

# Firebase Admin SDK Configuration
# In a Firebase/Google Cloud environment (like App Hosting, Cloud Run, Cloud Functions),
# these credentials are often automatically provided by the environment.
# You usually DON'T need to set GOOGLE_APPLICATION_CREDENTIALS manually in such environments.
# For local development, you might need to set this up using a service account key file.
# See: https://firebase.google.com/docs/admin/setup#initialize-sdk
# GOOGLE_APPLICATION_CREDENTIALS="/path/to/your/serviceAccountKey.json"

# Admin User Configuration
# Comma-separated list of emails that should be granted admin privileges in the app.
# Make sure there are no spaces between emails.
# Example: "admin1@example.com,admin2@example.com"
ADMIN_EMAILS="admin@innerspell.com,junsupark9999@gmail.com"

# API Secret Key
# A strong, random secret key used to protect internal API endpoints (e.g., for external blog integration).
# You can generate one using a password manager or online generator.
# Example: "generate-a-strong-random-string-here"
BLOG_API_SECRET_KEY="generate-a-strong-random-string-here"
